/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
&kp Q  &kp W  &kp E     &kp R  &kp T          &kp Y      &kp U  &kp I        &kp O       &kp P
&kp A  &kp S  &kp D     &kp F  &kp G          &kp H      &kp J  &kp K        &kp L       &trans
&kp Z  &kp X  &kp C     &kp V  &kp B          &kp N      &kp M  &comma_semi  &dot_colon  &qmrk_excl
              &kp LGUI  &mo 2  &smart_shft    &kp SPACE  &mo 3  &to 0
            >;

            label = "qwerty";
        };

        game_layer {
            bindings = <
&kp TAB    &kp Q  &kp W    &kp E   &kp R        &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp A  &kp S    &kp D   &kp F        &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp Z  &kp X    &kp C   &kp V        &trans  &trans  &trans  &trans  &trans
                  &kp ESC  &trans  &kp SPACE    &trans  &trans  &trans
            >;
        };

        num_layer {
            bindings = <
&kp TILDE    &kp AT    &kp LBRC  &kp RBRC  &kp PRCNT    &kp STAR    &kp N7  &kp N8  &kp N9  &kp MINUS
&kp CARET    &kp HASH  &kp LPAR  &kp RPAR  &kp DLLR     &kp UNDER   &kp N4  &kp N5  &kp N6  &kp PLUS
&amps_morph  &kp LT    &kp LBKT  &kp RBKT  &kp GT       &slh_morph  &kp N1  &kp N2  &kp N3  &kp EQUAL
                       &trans    &trans    &trans       &kp N0      &trans  &trans
            >;
        };

        nav_layer {
            bindings = <
&trans     &trans     &trans    &trans    &trans    &kp DEL   &kp HOME  &kp END  &kp TAB    &kp BSPC
&sk LSHFT  &sk LCTRL  &sk LALT  &sk LGUI  &trans    &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT  &gresc
&trans     &trans     &trans    &trans    &trans    &trans    &kp RET   &trans   &trans     &trans
                      &trans    &trans    &trans    &trans    &trans    &trans
            >;
        };

        fun_layer {
            bindings = <
&tog 1        &kp K_MUTE    &kp C_VOL_DN  &kp C_VOL_UP  &out OUT_USB    &trans  &kp F7  &kp F8  &kp F9  &kp F12
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &kp F4  &kp F5  &kp F6  &kp F11
&bt BT_CLR    &kp C_PREV    &kp C_PP      &kp C_NEXT    &out OUT_BLE    &trans  &kp F1  &kp F2  &kp F3  &kp F10
                            &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};